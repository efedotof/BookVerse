/********************************************/
/*                                          */
/*        üì± –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: BookVerse      */
/*        üìö –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ–µ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —á—Ç–µ–Ω–∏—è –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–Ω–∏–≥. –û—Ç–∫—Ä–æ–π—Ç–µ –º–∏—Ä –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –ø—Ä—è–º–æ —Å –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –≥–¥–µ –±—ã –≤—ã –Ω–∏ –Ω–∞—Ö–æ–¥–∏–ª–∏—Å—å. –° –ª–µ–≥–∫–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–∞–π—Ç–µ –∏ —á–∏—Ç–∞–π—Ç–µ —Å–≤–æ–∏ –ª—é–±–∏–º—ã–µ –∫–Ω–∏–≥–∏ –∏–∑ –ø–∞–º—è—Ç–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö.    */
/*        üë§ –ê–≤—Ç–æ—Ä: efedotov                       */
/*        üìÖ –î–∞—Ç–∞: 2023-07-29                 */
/*        üöÄ –í–µ—Ä—Å–∏—è: 0.0                         */
/*                                          */
/*        ¬© –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.                */
/*                                          */
/// *****************************************
import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
// ignore: camel_case_types
class bottom extends StatefulWidget {
  const bottom({super.key,
    required this.start,
    required this.end,
    required this.mode,

  });
    final int start;
    final int end;
    final bool mode;

  @override
  State<bottom> createState() => _bottomState();
}

// ignore: camel_case_types
class _bottomState extends State<bottom> {
  String currentTime = '';
  NumberFormat numberFormat = NumberFormat("#,##0.00", "en_US");
  @override
  void initState() {
    super.initState();
    _getCurrentTime();
  }

    void _getCurrentTime() {
      
      String formattedTime = DateFormat('HH:mm').format(DateTime.now());
      setState(() {
        currentTime = formattedTime;
      });
      Future.delayed(const Duration(seconds: 1), _getCurrentTime);
  }
  @override
  Widget build(BuildContext context) {
    return Container(
      height: 40,
      color:widget.mode?Colors.black:Colors.white,
      width: MediaQuery.of(context).size.width,
      child: 
         Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            
            Text("${widget.start} / ${widget.end}     ${numberFormat.format((widget.start / widget.end) * 100)} %",style: TextStyle(color:widget.mode?Colors.white:Colors.black),),
            Text(currentTime,style: TextStyle(color:widget.mode?Colors.white:Colors.black),),
          ],
        ),
     
    );
  }
}


