/********************************************/
/*                                          */
/*        üì± –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: BookVerse      */
/*        üìö –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ–µ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —á—Ç–µ–Ω–∏—è –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–Ω–∏–≥. –û—Ç–∫—Ä–æ–π—Ç–µ –º–∏—Ä –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –ø—Ä—è–º–æ —Å –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –≥–¥–µ –±—ã –≤—ã –Ω–∏ –Ω–∞—Ö–æ–¥–∏–ª–∏—Å—å. –° –ª–µ–≥–∫–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–∞–π—Ç–µ –∏ —á–∏—Ç–∞–π—Ç–µ —Å–≤–æ–∏ –ª—é–±–∏–º—ã–µ –∫–Ω–∏–≥–∏ –∏–∑ –ø–∞–º—è—Ç–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö.    */
/*        üë§ –ê–≤—Ç–æ—Ä: efedotov                       */
/*        üìÖ –î–∞—Ç–∞: 2023-08-04                 */
/*        üöÄ –í–µ—Ä—Å–∏—è: 0.0                         */
/*                                          */
/*        ¬© –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.                */
/*                                          */
/// *****************************************




import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:magazine/widgets/additional%20tools/cardsing.dart';
import 'package:magazine/list_data_text.dart';
import 'UserModel.dart';
import 'additional–°ontinuationWidget.dart';


class ProfileScreensView extends StatefulWidget {
  const ProfileScreensView({super.key,
    required this.uid,
  }); 
   final String? uid;
  @override
  State<ProfileScreensView> createState() => _ProfileScreensViewState();
}

class _ProfileScreensViewState extends State<ProfileScreensView> {
  User? user = FirebaseAuth.instance.currentUser;
  UserModel model = UserModel();
  bool _isloading = true;

  @override
  void initState() {
    super.initState();
    FirebaseFirestore.instance.collection('users').doc(widget.uid!)
    .get().then((value){
      this.model = UserModel.fromMap(value.data());
      setState(() {
        if(model.email!= null && model.name != null && model.nickname != null){
          _isloading = false;
        }
      });
    });
  }







  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Stack(
        children:[ 
        SingleChildScrollView(
          child: Column(
            children: [
              const SizedBox(height:30,),
              Padding(
                padding: const EdgeInsets.only(left: 20, right: 20),
                child: Align(
                  alignment: Alignment.topRight,
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      const Text('–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'),
                      Center(
                        child: Container(
                        height: 30,
                        width: 30,
                        decoration: BoxDecoration(
                          color: Colors.white,
                          borderRadius: BorderRadius.circular(4),
                          boxShadow: [
                            BoxShadow(
                              color: Colors.grey.withOpacity(0.1),
                              spreadRadius: 2,
                              blurRadius: 4,
                              offset: Offset(0, 1),
                            ),
                          ],
                        ),
                        child: Center( // –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –∏–∫–æ–Ω–∫–∏, —á—Ç–æ–±—ã —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –µ–µ –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ
                          child: IconButton(
                            onPressed: () {},
                            icon: const Icon(Icons.menu,size: 16,),
                            color: Colors.black,
                          ),
                        ),
                      ),
                      ),
                
                    ],
                  ),
                ),
              ),
              const SizedBox(height:10,),
              Center(
                child: Container(
                  padding: EdgeInsets.all(5),
                  width: MediaQuery.of(context).size.width*0.9,
                  height: MediaQuery.of(context).size.height * 0.2,
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(6),
                    color: Colors.blueAccent.shade100,
                  ),
                  child: Row(mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: [
                    // left
                    SizedBox(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                        Material(
                                // Wrap the avatar with Material widget for highlighting effect
                                color: Colors.transparent,
                                child: Material(
                                  color: Colors.transparent,
                                  child: CircleAvatar(
                                    backgroundColor: Colors.blue.shade100,
                                    radius: MediaQuery.of(context).size.height *
                                        0.07,
                                    child: StreamBuilder(
                                      stream: FirebaseFirestore.instance.collection('users').doc(widget.uid).collection('images').snapshots(),
                                      builder: (BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot){
                                              if(snapshot.connectionState == ConnectionState.waiting){
                                                          return Center(child: CircularProgressIndicator());
                                              } 
                                              else {
                                                if (snapshot
                                                    .data!.docs.isEmpty) {
                                                  return const Center(
                                                    child:
                                                        Text(' '),
                                                  );
                                                }
                                                return ClipOval(
                                                    child: Image.network(
                                                  snapshot.data!.docs[snapshot
                                                          .data!.docs.length -
                                                      1]['URL'],
                                                  height: 140,
                                                  width: 140,
                                                  fit: BoxFit.cover,
                                                ));
                                              }
                                      } ,
                                    ),

                                  ),
                                ),
                              ),
                      ],),
                
                    ),  
                    //rigth
                    SizedBox(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          _isloading? CircularProgressIndicator(): Text(model.name.toString()),
                          const SizedBox(height: 10,),
                          _isloading? CircularProgressIndicator():Text(model.nickname.toString()),
                          const SizedBox(height: 10,),
                          _isloading? CircularProgressIndicator():Text(model.email.toString()),
                        ],
                      ),
                    ), 
                  ],),
                ),
              ),
              const SizedBox(height:20,),
              Padding(
                padding: const EdgeInsets.only(left: 20, right: 20),
                child: Align(alignment: Alignment.topLeft,child: const Text('–ú–æ–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏')),
              ),
              Wrap(
          direction: Axis.horizontal, 
          spacing: 16.0, 
          children: [
            for (int index = 0; index < 10; index++)
              SizedBox(
          width: MediaQuery.of(context).size.width *0.4, 
          height: MediaQuery.of(context).size.height * 0.4 - 10,
        
          child:  const cards(name: '–ù–∞–∑–≤–∞–Ω–∏–µ', author: '–ê–≤—Ç–æ—Ä', genre: '–ñ–∞–Ω—Ä', image_netvorsk: 'assets/testImage.jpg'),
              ),
          ],
                )
                
            ],
          ),
        ),
        const  AdditionalContinuationWidget(),



        ],
      ),
    );
  }
}