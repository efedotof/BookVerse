
/********************************************/
/*                                          */
/*        üì± –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: BookVerse      */
/*        üìö –û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ–µ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —á—Ç–µ–Ω–∏—è –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–Ω–∏–≥. –û—Ç–∫—Ä–æ–π—Ç–µ –º–∏—Ä –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –ø—Ä—è–º–æ —Å –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –≥–¥–µ –±—ã –≤—ã –Ω–∏ –Ω–∞—Ö–æ–¥–∏–ª–∏—Å—å. –° –ª–µ–≥–∫–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–∞–π—Ç–µ –∏ —á–∏—Ç–∞–π—Ç–µ —Å–≤–æ–∏ –ª—é–±–∏–º—ã–µ –∫–Ω–∏–≥–∏ –∏–∑ –ø–∞–º—è—Ç–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö.    */
/*        üë§ –ê–≤—Ç–æ—Ä: efedotov                       */
/*        üìÖ –î–∞—Ç–∞: 2023-08-05                 */
/*        üöÄ –í–µ—Ä—Å–∏—è: 0.0                         */
/*                                          */
/*        ¬© –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.                */
/*                                          */
/// *****************************************

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:magazine/Auth/auth/login.dart';
import 'package:magazine/tools/message.dart';

import 'Auth.dart';

class QuicEntry extends StatefulWidget {
  const QuicEntry({super.key, required this.email, required this.password});
  final String email;
  final String password;

  @override
  State<QuicEntry> createState() => _QuicEntryState();
}

class _QuicEntryState extends State<QuicEntry> {
  @override
  Widget build(BuildContext context) {
    return Container(
        color: Colors.black54,
        height: MediaQuery.of(context).size.height,
        width: MediaQuery.of(context).size.width,
         // –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞
        child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [
          Expanded(child: GestureDetector(
            onTap: () {
              LoginScreen.of(context)!.quickentryState();
            },
          )),
          
          Container(
              width: MediaQuery.of(context).size.width,
               decoration: const BoxDecoration(
                    color: Colors.white,
                    borderRadius: BorderRadius.only(
                      topLeft: Radius.circular(20.0),
                      topRight: Radius.circular(20.0),
                    ),
                  ),
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  const SizedBox(height: 10,),
                  const Text(
                    '–ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥',
                    style: TextStyle(
                      decoration: TextDecoration.none,
                      fontFamily: 'YourFontFamily',
                      fontSize: 16,
                      color: Colors.black,
                      letterSpacing: 2.0,
                    ),
                  ),
                  const SizedBox(
                    height: 30,
                  ),

                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Column(
                        children: [
                          const Text('–ü–æ—á—Ç–∞:'),
                          const SizedBox(
                            height: 20,
                          ),
                          const Text('–ü–∞—Ä–æ–ª—å:'),
                        ],
                      ),
                      const SizedBox(width: 30,),
                      Column(
                        children: [
                          Text(
                            '${widget.email}',
                            style: const TextStyle(
                              // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Å—Ç–∏–ª—è, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
                              decoration:
                                  TextDecoration.none, // –£–±–∏—Ä–∞–µ—Ç –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ
                              fontFamily:
                                  'YourFontFamily', // –£–∫–∞–∂–∏—Ç–µ –Ω—É–∂–Ω—ã–π —à—Ä–∏—Ñ—Ç, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
                              fontSize: 16, // –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
                              color: Colors.black, // –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
                              letterSpacing: 2.0, // –ú–µ–∂–±—É–∫–≤–µ–Ω–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
                              // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ TextPainter –¥–ª—è –∑–∞–º–µ–Ω—ã —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞ "*"
                              // –ó–∞–º–µ–Ω—è–µ–º —Å–∏–º–≤–æ–ª—ã –Ω–∞ "*"
                              // –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—å –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –Ω–∞ "*", —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É
                              // child.text = String.fromCharCodes(List.filled(child.text.runes.length, 42));
                            ),
                          ),
                          const SizedBox(
                            height: 20,
                          ),
                          Text(
                            '*' * widget.password.length,
                            style: const TextStyle(
                              // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Å—Ç–∏–ª—è, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
                              decoration:
                                  TextDecoration.none, // –£–±–∏—Ä–∞–µ—Ç –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ
                              fontFamily:
                                  'YourFontFamily', // –£–∫–∞–∂–∏—Ç–µ –Ω—É–∂–Ω—ã–π —à—Ä–∏—Ñ—Ç, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
                              fontSize: 16, // –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
                              color: Colors.black,
                              letterSpacing: 2.0,
                            ),
                          ),
                        ],
                      )
                    ],
                  ),

                  const SizedBox(
                    height: 20,
                  ),
                  Container(
                    width: 120,
                    decoration: BoxDecoration(
                      color: Colors.blue.shade500,
                      borderRadius: BorderRadius.circular(30),
                    ),
                    child: OutlinedButton(
                      onPressed: () {
                        if (widget.email != '' && widget.password != '') {
      Auth().signin(context, widget.email, widget.password);
    } else {
      Message.show(context,
          message: '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å', duration: Duration(seconds: 3));
    }


                      },
                      style: OutlinedButton.styleFrom(
                        side: BorderSide.none,
                        shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(30)),
                      ),
                      child: const Text(
                        '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å',
                        style: TextStyle(
                          color: Colors.white, // –ë–µ–ª—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
                        ),
                      ),
                    ),
                  ),
                  const SizedBox(
                    height: 25,
                  ),
                  // Container(
                  //   width: 120,
                  //   decoration: BoxDecoration(
                  //     color: Colors.blue.shade500,
                  //     borderRadius: BorderRadius.circular(30),
                  //   ),
                  //   child: OutlinedButton(
                  //     onPressed: () {},
                  //     style: OutlinedButton.styleFrom(
                  //       side: BorderSide.none,
                  //       shape: RoundedRectangleBorder(
                  //           borderRadius: BorderRadius.circular(30)),
                  //     ),
                  //     child: const Text(
                  //       '–û—Ç–º–µ–Ω–∞',
                  //       style: TextStyle(
                  //         color: Colors.white, // –ë–µ–ª—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
                  //       ),
                  //     ),
                  //   ),
                  // ),
                ],
              )),
        ]));
  }
}